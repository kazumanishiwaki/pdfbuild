name: Generate PDF

on:
  workflow_dispatch:
    inputs:
      wp_post_ids:
        description: 'WordPress投稿ID（複数の場合はカンマ区切り）'
        required: true
        default: ''
      target_slug:
        description: 'ビルド対象のスラッグ（指定がなければ最初のIDを使用）'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'          

      - name: Install dependencies
        run: npm ci

      - name: Set build slug
        id: set-slug
        run: |
          TARGET_SLUG="${{ github.event.inputs.target_slug }}"
          if [ -z "$TARGET_SLUG" ]; then
            # ターゲットスラッグが指定されていない場合は、最初のIDを使用
            IDS="${{ github.event.inputs.wp_post_ids }}"
            FIRST_ID=$(echo $IDS | cut -d ',' -f1)
            TARGET_SLUG=$FIRST_ID
          fi
          echo "使用するスラッグ: $TARGET_SLUG"
          echo "target_slug=$TARGET_SLUG" >> $GITHUB_OUTPUT

      - name: Fetch latest data from WordPress
        env:
          WP_PAGE_IDS: ${{ github.event.inputs.wp_post_ids }}
          WP_JWT: ${{ secrets.WP_JWT }}
        run: |
          echo "WordPressからデータを取得中..."
          # 明示的にWP_URLを設定
          export WP_URL="http://kazumanishiwaki.net/ks"
          
          # JWTが設定されているか確認（セキュリティのため内容は表示しない）
          if [ -n "$WP_JWT" ]; then
            echo "JWT認証トークンが設定されています"
          else
            echo "警告: JWT認証トークンが設定されていません"
          fi
          
          # テスト用に一時的にBasic認証を試す（必要に応じて）
          # export WP_BASIC_AUTH="username:password"
          
          node scripts/fetch-acf.js
          echo "データ取得完了"
          ls -la content*.json || echo "JSONファイルが生成されませんでした"
          cat content.json 2>/dev/null || echo "content.jsonファイルが見つかりません"

      - name: Build PDF
        env:
          SLUG: ${{ steps.set-slug.outputs.target_slug }}
        run: node build.js

      - name: Upload PDF
        uses: actions/upload-artifact@v4
        with:
          name: booklet
          path: booklet-${{ steps.set-slug.outputs.target_slug }}.pdf
          retention-days: 14    

      - name: Notify WordPress with Run ID
        env:
          WEBHOOK: ${{ secrets.WP_WEBHOOK_URL }}
          POST_ID: ${{ steps.set-slug.outputs.target_slug }}
        run: |
          curl -X POST "$WEBHOOK" \
          -H "Content-Type: application/json" \
          -d "{\"run_id\": \"${{ github.run_id }}\", \"post_id\": \"$POST_ID\"}"
