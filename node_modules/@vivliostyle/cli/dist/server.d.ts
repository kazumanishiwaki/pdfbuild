/// <reference types="node" />
import http from 'http';
import { URL } from 'url';
export declare type PageSize = {
    format: string;
} | {
    width: string;
    height: string;
};
export interface Server {
    server: http.Server;
    port: number;
}
export declare type ViewerUrlOption = {
    size?: PageSize;
    cropMarks?: boolean;
    bleed?: string;
    cropOffset?: string;
    css?: string;
    style?: string;
    userStyle?: string;
    singleDoc?: boolean;
    quick?: boolean;
};
export declare type ServerOption = ViewerUrlOption & {
    input: string;
    workspaceDir: string;
    httpServer: boolean;
    viewer: string | undefined;
};
export declare function prepareServer(option: ServerOption): Promise<{
    viewerFullUrl: string;
}>;
export declare function teardownServer(): void;
export declare function getViewerFullUrl({ size, cropMarks, bleed, cropOffset, css, style, userStyle, singleDoc, quick, }: ViewerUrlOption, { viewerUrl, sourceUrl }: {
    viewerUrl: URL;
    sourceUrl: URL;
}): string;
//# sourceMappingURL=server.d.ts.map