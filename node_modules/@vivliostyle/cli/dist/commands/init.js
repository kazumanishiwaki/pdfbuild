import {
  init
} from "../chunk-FIAUNKIE.js";
import {
  gracefulError,
  parseFlagsToInlineConfig
} from "../chunk-S2Q2FDUM.js";
import "../chunk-WFLNEE7C.js";
import "../chunk-4IIM6RSG.js";
import "../chunk-I7BWSAN6.js";

// src/commands/init.parser.ts
import { Command, Option } from "commander";
function setupInitParserProgram() {
  const program = new Command();
  program.name("vivliostyle init").description("create vivliostyle config file").option("--title <title>", "title").option("--author <author>", "author").option("-l, --language <language>", "language").option("-s, --size  <size>", "paper size").option("-T, --theme <theme>", "theme").addOption(
    new Option(
      "--log-level <level>",
      "specify a log level of console outputs"
    ).choices(["silent", "info", "verbose", "debug"]).default("info")
  );
  return program;
}

// src/commands/init.ts
try {
  const inlineConfig = parseFlagsToInlineConfig(
    process.argv,
    setupInitParserProgram
  );
  await init(inlineConfig);
} catch (err) {
  if (err instanceof Error) {
    gracefulError(err);
  }
}
//# sourceMappingURL=init.js.map