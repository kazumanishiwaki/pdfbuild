{"version":3,"sources":["../../src/commands/init.parser.ts","../../src/commands/init.ts"],"sourcesContent":["import { Command, Option } from 'commander';\n\nexport function setupInitParserProgram(): Command {\n  const program = new Command();\n  program\n    .name('vivliostyle init')\n    .description('create vivliostyle config file')\n    .option('--title <title>', 'title')\n    .option('--author <author>', 'author')\n    .option('-l, --language <language>', 'language')\n    .option('-s, --size  <size>', 'paper size')\n    .option('-T, --theme <theme>', 'theme')\n    .addOption(\n      new Option(\n        '--log-level <level>',\n        'specify a log level of console outputs',\n      )\n        .choices(['silent', 'info', 'verbose', 'debug'])\n        .default('info'),\n    );\n  return program;\n}\n","import { init } from '../core/init.js';\nimport { gracefulError } from '../util.js';\nimport { parseFlagsToInlineConfig } from './cli-flags.js';\nimport { setupInitParserProgram } from './init.parser.js';\n\ntry {\n  const inlineConfig = parseFlagsToInlineConfig(\n    process.argv,\n    setupInitParserProgram,\n  );\n  await init(inlineConfig);\n} catch (err) {\n  if (err instanceof Error) {\n    gracefulError(err);\n  }\n}\n"],"mappings":";;;;;;;;;;;;AAAA,SAAS,SAAS,cAAc;AAEzB,SAAS,yBAAkC;AAChD,QAAM,UAAU,IAAI,QAAQ;AAC5B,UACG,KAAK,kBAAkB,EACvB,YAAY,gCAAgC,EAC5C,OAAO,mBAAmB,OAAO,EACjC,OAAO,qBAAqB,QAAQ,EACpC,OAAO,6BAA6B,UAAU,EAC9C,OAAO,sBAAsB,YAAY,EACzC,OAAO,uBAAuB,OAAO,EACrC;AAAA,IACC,IAAI;AAAA,MACF;AAAA,MACA;AAAA,IACF,EACG,QAAQ,CAAC,UAAU,QAAQ,WAAW,OAAO,CAAC,EAC9C,QAAQ,MAAM;AAAA,EACnB;AACF,SAAO;AACT;;;AChBA,IAAI;AACF,QAAM,eAAe;AAAA,IACnB,QAAQ;AAAA,IACR;AAAA,EACF;AACA,QAAM,KAAK,YAAY;AACzB,SAAS,KAAK;AACZ,MAAI,eAAe,OAAO;AACxB,kBAAc,GAAG;AAAA,EACnB;AACF;","names":[]}