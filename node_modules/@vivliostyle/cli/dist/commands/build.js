"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
const process_1 = __importDefault(require("process"));
const build_1 = require("../build");
const util_1 = require("../util");
const build_parser_1 = require("./build.parser");
try {
    const program = build_parser_1.setupBuildParserProgram();
    program.parse(process_1.default.argv);
    const options = program.opts();
    build_1.build({
        input: (_a = program.args) === null || _a === void 0 ? void 0 : _a[0],
        configPath: options.config,
        targets: options.targets,
        theme: options.theme,
        size: options.size,
        cropMarks: options.cropMarks,
        bleed: options.bleed,
        cropOffset: options.cropOffset,
        css: options.css,
        style: options.style,
        userStyle: options.userStyle,
        singleDoc: options.singleDoc,
        title: options.title,
        author: options.author,
        language: options.language,
        pressReady: options.pressReady,
        renderMode: options.renderMode || 'local',
        preflight: options.preflight,
        preflightOption: options.preflightOption,
        verbose: options.verbose,
        timeout: options.timeout,
        sandbox: options.sandbox,
        executableBrowser: options.executableBrowser,
        image: options.image,
        http: options.http,
        viewer: options.viewer,
        // browser: options.browser,
        bypassedPdfBuilderOption: options.bypassedPdfBuilderOption,
        executableChromium: options.executableChromium, // TODO: Remove it in the next major version up
    }).catch(util_1.gracefulError);
}
catch (err) {
    if (err instanceof Error) {
        util_1.gracefulError(err);
    }
}
//# sourceMappingURL=build.js.map