{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import * as v from 'valibot';\nimport { VivliostyleInlineConfig } from './config/schema.js';\nimport { build as _build } from './core/build.js';\nimport { init as _init } from './core/init.js';\nimport { preview as _preview } from './core/preview.js';\nimport type { PublicationManifest as _PublicationManifest } from './schema/publication.schema.js';\n\nexport type {\n  StructuredDocument,\n  StructuredDocumentSection,\n  VivliostyleConfigSchema,\n} from './config/schema.js';\nexport { createVitePlugin } from './vite-adapter.js';\n/** @hidden */\nexport type PublicationManifest = _PublicationManifest;\n\n/**\n * Build publication file(s) from the given configuration.\n *\n * ```ts\n * import { build } from '@vivliostyle/cli';\n * build({\n *   configPath: './vivliostyle.config.js',\n *   logLevel: 'silent',\n * });\n * ```\n *\n * @param options\n * @returns\n */\nexport async function build(options: VivliostyleInlineConfig) {\n  const parsed = v.parse(VivliostyleInlineConfig, options);\n  return await _build(parsed);\n}\n\n/**\n * Initialize a new vivliostyle.config.js file.\n *\n * @param options\n * @returns\n */\nexport async function init(options: VivliostyleInlineConfig) {\n  const parsed = v.parse(VivliostyleInlineConfig, options);\n  return await _init(parsed);\n}\n\n/**\n * Open a browser for previewing the publication.\n *\n * @param options\n * @returns\n */\nexport async function preview(options: VivliostyleInlineConfig) {\n  const parsed = v.parse(VivliostyleInlineConfig, options);\n  return await _preview(parsed);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,YAAY,OAAO;AA8BnB,eAAsBA,OAAM,SAAkC;AAC5D,QAAM,SAAW,QAAM,yBAAyB,OAAO;AACvD,SAAO,MAAM,MAAO,MAAM;AAC5B;AAQA,eAAsBC,MAAK,SAAkC;AAC3D,QAAM,SAAW,QAAM,yBAAyB,OAAO;AACvD,SAAO,MAAM,KAAM,MAAM;AAC3B;AAQA,eAAsBC,SAAQ,SAAkC;AAC9D,QAAM,SAAW,QAAM,yBAAyB,OAAO;AACvD,SAAO,MAAM,QAAS,MAAM;AAC9B;","names":["build","init","preview"]}