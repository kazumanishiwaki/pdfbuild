"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.init = void 0;
const chalk_1 = __importDefault(require("chalk"));
const fs_1 = __importDefault(require("fs"));
const upath_1 = __importDefault(require("upath"));
const container_1 = require("./container");
const util_1 = require("./util");
async function init(cliFlags) {
    const vivliostyleConfigPath = upath_1.default.join(util_1.cwd, 'vivliostyle.config.js');
    if (fs_1.default.existsSync(vivliostyleConfigPath)) {
        return util_1.log(`${chalk_1.default.yellow('vivliostyle.config.js already exists. aborting.')}`);
    }
    // prettier-ignore
    const vivliostyleConfig = `// @ts-check
/** @type {import('@vivliostyle/cli').VivliostyleConfigSchema} */
const vivliostyleConfig = {
  title: '${cliFlags.title || 'Principia'}', // populated into 'publication.json', default to 'title' of the first entry or 'name' in 'package.json'.
  author: '${cliFlags.author || 'Isaac Newton'}', // default to 'author' in 'package.json' or undefined
  ${cliFlags.language ? '' : '// '}language: '${cliFlags.language || 'la'}',
  // readingProgression: 'rtl', // reading progression direction, 'ltr' or 'rtl'.
  ${cliFlags.size ? '' : '// '}size: '${cliFlags.size || 'A4'}',
  ${cliFlags.theme ? '' : '// '}theme: '${cliFlags.theme || ''}', // .css or local dir or npm package. default to undefined
  image: '${container_1.CONTAINER_IMAGE}',
  entry: [ // **required field**
    // 'introduction.md', // 'title' is automatically guessed from the file (frontmatter > first heading)
    // {
    //   path: 'epigraph.md',
    //   title: 'おわりに', // title can be overwritten (entry > file),
    //   theme: '@vivliostyle/theme-whatever' // theme can be set individually. default to root 'theme'
    // },
    // 'glossary.html' // html is also acceptable
  ], // 'entry' can be 'string' or 'object' if there's only single markdown file
  // entryContext: './manuscripts', // default to '.' (relative to 'vivliostyle.config.js')
  // output: [ // path to generate draft file(s). default to '{title}.pdf'
  //   './output.pdf', // the output format will be inferred from the name.
  //   {
  //     path: './book',
  //     format: 'webpub',
  //   },
  // ],
  // workspaceDir: '.vivliostyle', // directory which is saved intermediate files.
  // toc: true, // whether generate and include ToC HTML or not, default to 'false'.
  // cover: './cover.png', // cover image. default to undefined.
  // vfm: { // options of VFM processor
  //   replace: [ // specify replace handlers to modify HTML outputs
  //     {
  //       // This handler replaces {current_time} to a current local time tag.
  //       test: /{current_time}/,
  //       match: (_, h) => {
  //         const currentTime = new Date().toLocaleString();
  //         return h('time', { datetime: currentTime }, currentTime);
  //       },
  //     },
  //   ],
  //   hardLineBreaks: true, // converts line breaks of VFM to <br> tags. default to 'false'.
  //   disableFormatHtml: true, // disables HTML formatting. default to 'false'.
  // },
};

module.exports = vivliostyleConfig;
`;
    fs_1.default.writeFileSync(vivliostyleConfigPath, vivliostyleConfig);
    util_1.log(`Successfully created ${chalk_1.default.cyan('vivliostyle.config.js')}`);
}
exports.init = init;
//# sourceMappingURL=init.js.map